import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, u as create_component, b as space, e as element, t as text, w as query_selector_all, y as claim_component, g as detach_dev, h as claim_space, c as claim_element, f as children, p as claim_text, k as attr_dev, j as add_location, z as mount_component, l as insert_dev, m as append_dev, r as set_data_dev, A as transition_in, B as transition_out, C as destroy_component } from './client.6c6b8b81.js';
import { b as baseUrl, T as Title } from './Title.2b3f0dcd.js';

/* src\routes\blog\[slug].svelte generated by Svelte v3.24.1 */
const file = "src\\routes\\blog\\[slug].svelte";

// (46:2) <Title>
function create_default_slot(ctx) {
	let t_value = /*article*/ ctx[0].title + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		l: function claim(nodes) {
			t = claim_text(nodes, t_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*article*/ 1 && t_value !== (t_value = /*article*/ ctx[0].title + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(46:2) <Title>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title;
	let t0;
	let article_1;
	let div;
	let h1;
	let t1_value = /*article*/ ctx[0].title + "";
	let t1;
	let t2;
	let small;
	let t3;
	let t4_value = /*formatedDate*/ ctx[1]() + "";
	let t4;
	let t5;
	let p;
	let t6_value = /*article*/ ctx[0].content + "";
	let t6;
	let current;

	title = new Title({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(title.$$.fragment);
			t0 = space();
			article_1 = element("article");
			div = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			small = element("small");
			t3 = text("Published on ");
			t4 = text(t4_value);
			t5 = space();
			p = element("p");
			t6 = text(t6_value);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-u88whp\"]", document.head);
			claim_component(title.$$.fragment, head_nodes);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			article_1 = claim_element(nodes, "ARTICLE", { class: true });
			var article_1_nodes = children(article_1);
			div = claim_element(article_1_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);
			small = claim_element(div_nodes, "SMALL", { class: true });
			var small_nodes = children(small);
			t3 = claim_text(small_nodes, "Published on ");
			t4 = claim_text(small_nodes, t4_value);
			small_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t5 = claim_space(article_1_nodes);
			p = claim_element(article_1_nodes, "P", {});
			var p_nodes = children(p);
			t6 = claim_text(p_nodes, t6_value);
			p_nodes.forEach(detach_dev);
			article_1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-ff3u0");
			add_location(h1, file, 53, 4, 1035);
			attr_dev(small, "class", "svelte-ff3u0");
			add_location(small, file, 54, 4, 1065);
			attr_dev(div, "class", "title-box");
			add_location(div, file, 52, 2, 1006);
			add_location(p, file, 56, 2, 1123);
			attr_dev(article_1, "class", "svelte-ff3u0");
			add_location(article_1, file, 48, 0, 891);
		},
		m: function mount(target, anchor) {
			mount_component(title, document.head, null);
			insert_dev(target, t0, anchor);
			insert_dev(target, article_1, anchor);
			append_dev(article_1, div);
			append_dev(div, h1);
			append_dev(h1, t1);
			append_dev(div, t2);
			append_dev(div, small);
			append_dev(small, t3);
			append_dev(small, t4);
			append_dev(article_1, t5);
			append_dev(article_1, p);
			append_dev(p, t6);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const title_changes = {};

			if (dirty & /*$$scope, article*/ 5) {
				title_changes.$$scope = { dirty, ctx };
			}

			title.$set(title_changes);
			if ((!current || dirty & /*article*/ 1) && t1_value !== (t1_value = /*article*/ ctx[0].title + "")) set_data_dev(t1, t1_value);
			if ((!current || dirty & /*article*/ 1) && t6_value !== (t6_value = /*article*/ ctx[0].content + "")) set_data_dev(t6, t6_value);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(title.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(title.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(title);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(article_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page, session) {
	const { slug } = page.params;
	const res = await this.fetch(`${baseUrl}/api/posts/${slug}/`);
	const article = await res.json();
	return { article };
}

function instance($$self, $$props, $$invalidate) {
	let { article } = $$props;

	function formatedDate() {
		return new Date(article.updated_at).toLocaleString();
	}

	const writable_props = ["article"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Bslugu5D", $$slots, []);

	$$self.$$set = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	$$self.$capture_state = () => ({
		baseUrl,
		preload,
		Title,
		article,
		formatedDate
	});

	$$self.$inject_state = $$props => {
		if ("article" in $$props) $$invalidate(0, article = $$props.article);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [article, formatedDate];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { article: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*article*/ ctx[0] === undefined && !("article" in props)) {
			console.warn("<U5Bslugu5D> was created without expected prop 'article'");
		}
	}

	get article() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set article(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bslugu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3NsdWddLjg4OTAwNWI1LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Jsb2cvW3NsdWddLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cclxuICBpbXBvcnQgeyBiYXNlVXJsIH0gZnJvbSBcIi4uL19jb21tb24vY29uZlwiO1xyXG5cclxuICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZChwYWdlLCBzZXNzaW9uKSB7XHJcbiAgICBjb25zdCB7IHNsdWcgfSA9IHBhZ2UucGFyYW1zO1xyXG5cclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZmV0Y2goYCR7YmFzZVVybH0vYXBpL3Bvc3RzLyR7c2x1Z30vYCk7XHJcbiAgICBjb25zdCBhcnRpY2xlID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgICByZXR1cm4geyBhcnRpY2xlIH07XHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgaW1wb3J0IFRpdGxlIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL1RpdGxlLnN2ZWx0ZVwiO1xyXG5cclxuICBleHBvcnQgbGV0IGFydGljbGU7XHJcblxyXG4gIGZ1bmN0aW9uIGZvcm1hdGVkRGF0ZSgpIHtcclxuICAgIHJldHVybiBuZXcgRGF0ZShhcnRpY2xlLnVwZGF0ZWRfYXQpLnRvTG9jYWxlU3RyaW5nKCk7XHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic2Nzc1wiPlxyXG4gIGFydGljbGUge1xyXG4gICAgZ3JpZC1jb2x1bW46IGNlbnRlci1zdGFydCAvIGNlbnRlci1lbmQ7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG5cclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBnYXA6IDFyZW07XHJcbiAgfVxyXG5cclxuICBpbWcge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICBoMSB7XHJcbiAgICBsaW5lLWhlaWdodDogMS4yO1xyXG4gIH1cclxuXHJcbiAgc21hbGwge1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLXByaW1hcnktMzAwKTtcclxuICB9XHJcbjwvc3R5bGU+XHJcblxyXG48c3ZlbHRlOmhlYWQ+XHJcbiAgPFRpdGxlPnthcnRpY2xlLnRpdGxlfTwvVGl0bGU+XHJcbjwvc3ZlbHRlOmhlYWQ+XHJcblxyXG48YXJ0aWNsZT5cclxuICA8IS0tIHsjaWYgYXJ0aWNsZS5jb3Zlcl9pbWd9XHJcbiAgICA8aW1nIHNyYz17YXJ0aWNsZS5jb3Zlcl9pbWd9IGFsdD17YXJ0aWNsZS50aXRsZX0gLz5cclxuICB7L2lmfSAtLT5cclxuICA8ZGl2IGNsYXNzPVwidGl0bGUtYm94XCI+XHJcbiAgICA8aDE+e2FydGljbGUudGl0bGV9PC9oMT5cclxuICAgIDxzbWFsbD5QdWJsaXNoZWQgb24ge2Zvcm1hdGVkRGF0ZSgpfTwvc21hbGw+XHJcbiAgPC9kaXY+XHJcbiAgPHA+e2FydGljbGUuY29udGVudH08L3A+XHJcbjwvYXJ0aWNsZT5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OzJCQTZDVSxHQUFPLElBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7bUVBQWIsR0FBTyxJQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFRZCxHQUFPLElBQUMsS0FBSzs7Ozs7aUNBQ0csR0FBWTs7Ozs0QkFFL0IsR0FBTyxJQUFDLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21GQUhaLEdBQU8sSUFBQyxLQUFLO21GQUdoQixHQUFPLElBQUMsT0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFyREcsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPO1NBQ2pDLElBQUksS0FBSyxJQUFJLENBQUMsTUFBTTtPQUV0QixHQUFHLFNBQVMsSUFBSSxDQUFDLEtBQUssSUFBSSxPQUFPLGNBQWMsSUFBSTtPQUNuRCxPQUFPLFNBQVMsR0FBRyxDQUFDLElBQUk7VUFFckIsT0FBTzs7OztPQU9QLE9BQU87O1VBRVQsWUFBWTthQUNSLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLGNBQWM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
